using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;

namespace MyQuest
{
    class GhostInvulnerability : Skill
    {
        public GhostInvulnerability()
        {
            Name = Strings.ZA417;
            Description = Strings.ZA418;

            MpCost = 15;
            SpCost = 6;//3;

            SpellPower = 3;
            DamageModifierValue = 0;

            BattleSkill = true;
            MapSkill = false;
            HealingSkill = false;
            MagicSkill = true;
            IsBasicAttack = false;

            TargetsAll = false;
            CanTargetAllies = false;
            CanTargetEnemy = false;
        }

        public override void Activate(FightingCharacter actor, params FightingCharacter[] targets)
        {
            base.Activate(actor, targets);
            SubtractCost(actor);
            actor.SetAnimation("Veil"); 
        }

        public override void Update(GameTime gameTime)
        {
            if (actor.CurrentAnimation.IsRunning == false)
            {
                StatusEffect invulnerable = new Invulnerable(1);
                SetStatusEffect(actor, invulnerable, actor); 
                actor.SetAnimation("Idle");
                isRunning = false;
            }
        }

        public override void OutOfCombatActivate(FightingCharacter actor, params FightingCharacter[] targets)
        {
            //Debug.Assert(actor.Stats.Energy >= MpCost);

            if (actor.FighterStats.Energy >= MpCost)
            {
                actor.FighterStats.Energy -= MpCost;
                foreach (FightingCharacter target in targets)
                {

                }
            }
        }

        public override void Draw(SpriteBatch spriteBatch)
        {
           
        }
    }
}
